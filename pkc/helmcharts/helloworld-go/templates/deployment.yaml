apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      name: {{ template "fullname" . }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        name: {{ template "fullname" . }}
        app: {{ template "fullname" . }}
    spec:
{{- if .Values.pvc.enabled }}
      volumes:
      - name: {{ template "fullname" . }}
        persistentVolumeClaim:
          claimName: {{ template "claimname" . }}
{{- end }}
{{- if .Values.k8swait.enabled }}
      serviceAccountName: {{ template "fullname" . }}-admin
      initContainers:
        env:
            - name: CLUSTER
              value: "{{ .Values.k8swait.parameters.cluster}}"
            - name: NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: RESOURCE
              value: "{{ .Values.k8swait.parameters.resource}}"
            - name: RNAME
              value: "{{ .Values.k8swait.job.jobname }}"
            - name: TIMEOUT
              value: "{{ .Values.k8swait.parameters.timeout}}"
            - name: FREQUENCE
              value: "{{ .Values.k8swait.parameters.frequence}}"
        name: {{ .Values.k8swait.parameters.name}}
        image: "{{ .Values.global.registry }}/{{ .Values.k8swait.repo }}:{{ .Values.k8swait.tag }}"
{{- if .Values.containerSecurityContext }}
        securityContext:
{{ toYaml .Values.containerSecurityContext | indent 10 }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- end }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.global.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if .Values.containerSecurityContext }}
        securityContext:
{{ toYaml .Values.containerSecurityContext | indent 10 }}
{{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.containerPorts.http.port }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: LANGUAGE
          value: "{{ .Values.language }}"
        - name: NAMESPACE
          value: "{{ .Release.Namespace }}"
{{- if .Values.pvc.enabled }}
        volumeMounts:
          - mountPath: /BACKUP
            name: "{{ template "fullname" . }}"
{{- end }}
{{- if .Values.pvc.enabled }}
      - name: cbura-sidecar
        image: "{{ .Values.global.registry }}/{{ .Values.cbur.cburagent.repo }}:{{ .Values.cbur.cburagent.tag }}"
        imagePullPolicy: {{ .Values.cbur.cburagent.imagePullPolicy }}
        volumeMounts:
        - mountPath: /{{ template "fullname" . }}
          name: "{{ template "fullname" . }}"
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- end }}
